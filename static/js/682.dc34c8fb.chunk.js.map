{"version":3,"file":"static/js/682.dc34c8fb.chunk.js","mappings":"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","sources":["components/appBanner/AppBanner.js","components/errorMessage/ErrorMessage.js","components/comicsList/ComicsList.js","components/pages/ComicsPage.js","services/MarvelService.js","hooks/http.hook.js"],"sourcesContent":["import './appBanner.scss';\nimport avengers from '../../resources/img/Avengers.png';\nimport avengersLogo from '../../resources/img/Avengers_logo.png';\n\nconst AppBanner = () => {\n    return (\n        <div className=\"app__banner\">\n            <img src={avengers} alt=\"Avengers\"/>\n            <div className=\"app__banner-text\">\n                New comics every week!<br/>\n                Stay tuned!\n            </div>\n            <img src={avengersLogo} alt=\"Avengers logo\"/>\n        </div>\n    )\n}\n\nexport default AppBanner;","import img from './error.gif';\n\nconst ErrorMessage = () => {\n    return (\n        <img style={{ display: 'block', width: \"250px\", height: \"250px\",objectFit: 'contain', margin: \"0 auto\"}}  src={img} alt=\"Error\"/>\n    )\n}\n\nexport default ErrorMessage;","import { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\n\nimport Spinner from '../spinner/Spinner';\nimport ErrorMessage from '../errorMessage/ErrorMessage';\nimport useMarvelService from '../../services/MarvelService';\nimport './comicsList.scss';\n\nconst setContent = (process, Component, newItemLoading) => {\n    switch (process) {\n        case 'waiting':\n            return <Spinner/>;\n        case 'loading':\n            return newItemLoading ? <Component/> : <Spinner/>;\n        case 'confirmed':\n            return <Component/>;\n        case 'error':\n            return <ErrorMessage/>;\n        default:\n            throw new Error('Unexpected process state');\n    }\n}\n\nconst ComicsList = () => {\n    const [comicsList, setComicsList] = useState([]);\n    const [newItemLoading, setNewItemLoading] = useState(false);\n    const [offset, setOffset] = useState(210);\n    const [comicsEnded, setComicsEnded] = useState(false);\n\n    const {loading, error, getAllComics, process, setProcess} = useMarvelService();\n\n    useEffect(() => {\n        onRequest(offset, true);\n    }, [])\n\n    const onRequest = (offset, initial) => {\n        initial ? setNewItemLoading(false) : setNewItemLoading(true);\n        getAllComics(offset)\n            .then(onComicsListLoaded)\n            .then(() => setProcess('confirmed'));\n    }\n\n    const onComicsListLoaded = (newComicsList) => {\n        let ended = false;\n        if (newComicsList.length < 8) {\n            ended = true;\n        }\n        \n        setComicsList(charList => [...charList, ...newComicsList]);\n        setNewItemLoading(false);\n        setOffset(offset => offset + 8);\n        setComicsEnded(ended);\n    }\n\n    function renderItems(arr) {\n        const items = arr.map((item, i) => {\n            return (\n                <li className=\"comics__item\"\n                    key={i}>\n                    <Link to={`/comics/${item.id}`}>\n                        <img src={item.thumbnail} alt={item.title} className=\"comics__item-img\"/>\n                        <div className=\"comics__item-name\">{item.title}</div>\n                        <div className=\"comics__item-price\">{`${item.price}$`}</div>\n                    </Link>\n                </li>\n            )\n        })\n\n        return (\n            <ul className=\"comics__grid\">\n                {items}\n            </ul>\n        )\n    }\n\n    return (\n        <div className=\"comics__list\">\n            {setContent(process, () => renderItems(comicsList), newItemLoading)}\n            <button className=\"button button__main button__long\"\n                    disabled={newItemLoading}\n                    style={{'display': comicsEnded ? 'none' : 'block'}}\n                    onClick={() => onRequest(offset)}>\n                <div className=\"inner\">load more</div>\n            </button>\n        </div>\n    )\n}\n\nexport default ComicsList;","import { Helmet } from \"react-helmet\";\r\n\r\nimport ComicsList from \"../comicsList/ComicsList\";\r\nimport AppBanner from \"../appBanner/AppBanner\";\r\n\r\nconst ComicsPage = () => {\r\n    return (\r\n        <>\r\n            <Helmet>\r\n                <meta\r\n                    name=\"description\"\r\n                    content=\"Page with list of our comics\"\r\n                    />\r\n                <title>Comics page</title>\r\n            </Helmet>\r\n            <AppBanner />\r\n            <ComicsList />\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ComicsPage;","import { useHttp } from \"../hooks/http.hook\";\n\nconst useMarvelService = () => {\n    const {loading, request, error, clearError, process, setProcess} = useHttp();\n\n    const _apiBase = 'https://gateway.marvel.com:443/v1/public/';\n    const _apiKey = 'apikey=4fdec1c0d9fca917f1352e2e554da390';\n    const _baseOffset = 210;\n\n    const getAllCharacters = async (offset = _baseOffset) => {\n        const res = await request(`${_apiBase}characters?limit=9&offset=${offset}&${_apiKey}`);\n        return res.data.results.map(_transformCharacter);\n    }\n\n    const getCharacter = async (id) => {\n        const res = await request(`${_apiBase}characters/${id}?${_apiKey}`);\n        return _transformCharacter(res.data.results[0]);\n    }\n\n    const getAllComics = async (offset = _baseOffset) => {\n        const res = await request(`${_apiBase}comics?limit=8&offset=${offset}&${_apiKey}`);\n        return res.data.results.map(_transformComics)\n    }\n\n    const getComics = async (id) => {\n        const res = await request(`${_apiBase}comics/${id}?${_apiKey}`);\n        return _transformComics(res.data.results[0]);\n    }\n\n    const getCharacterByName = async (name) => {\n        const res = await request(`${_apiBase}characters?name=${name}&${_apiKey}`);\n        return res.data.results;\n    }\n\n    const _transformCharacter = (char) => {\n        return {\n            id: char.id,\n            name: char.name,\n            description: char.description ? `${char.description.slice(0, 210)}...` : 'There is no description for this character',\n            fullDescription: char.description,\n            thumbnail: char.thumbnail.path + '.' + char.thumbnail.extension,\n            homepage: char.urls[0].url,\n            wiki: char.urls[1].url,\n            comics: char.comics.items\n        }\n    }\n\n    const _transformComics = (comics) => {\n        return {\n            id: comics.id,\n            title: comics.title,\n            price: comics.prices[0].price,\n            thumbnail: comics.thumbnail.path + '.' + comics.thumbnail.extension,\n            homepage: comics.urls[0].url,\n            description: comics.description || 'There is no description',\n            pageCount: comics.pageCount ? `${comics.pageCount} p.` : `No information about the number of pages`,\n            language: comics.textObjects.language || 'en-us'\n        }\n    }\n\n    return {loading, error, process, setProcess, getAllCharacters, getCharacter, getCharacterByName, clearError, getAllComics, getComics}\n}\n\nexport default useMarvelService;","import { useState, useCallback } from \"react\";\r\n\r\nexport const useHttp = () => {\r\n    const [loading, setLoading] = useState(false);\r\n    const [error, setError] = useState(null);\r\n    const [process, setProcess] = useState('waiting');\r\n\r\n    const request = useCallback(async (url, method = 'GET', body = null, headers = {'Content-Type': 'application/json'}) => {\r\n\r\n        setLoading(true);\r\n        setProcess('loading');\r\n\r\n        try {\r\n            const response = await fetch(url, {method, body, headers});\r\n\r\n            if (!response.ok) {\r\n                throw new Error(`Could not fetch ${url}, status: ${response.status}`);\r\n            }\r\n\r\n            const data = await response.json();\r\n\r\n            setLoading(false);\r\n            return data;\r\n        } catch(e) {\r\n            setLoading(false);\r\n            setError(e.message);\r\n            setProcess('error');\r\n            throw e;\r\n        }\r\n\r\n    }, [])\r\n\r\n    const clearError = useCallback(() => {\r\n        setError(null);\r\n        setProcess('error');\r\n    }, []);\r\n\r\n    return {loading, request, error, clearError, process, setProcess}\r\n}"],"names":["className","src","avengers","alt","avengersLogo","style","display","width","height","objectFit","margin","img","setContent","process","Component","newItemLoading","Spinner","ErrorMessage","Error","useState","comicsList","setComicsList","setNewItemLoading","offset","setOffset","comicsEnded","setComicsEnded","useMarvelService","getAllComics","loading","error","setProcess","useEffect","onRequest","initial","then","onComicsListLoaded","newComicsList","ended","length","charList","arr","items","map","item","i","to","id","thumbnail","title","price","renderItems","disabled","onClick","Helmet","name","content","AppBanner","setLoading","setError","request","useCallback","url","method","body","headers","fetch","response","ok","status","json","data","message","clearError","useHttp","_apiBase","_apiKey","_baseOffset","getAllCharacters","res","results","_transformCharacter","getCharacter","_transformComics","getComics","getCharacterByName","char","description","slice","fullDescription","path","extension","homepage","urls","wiki","comics","prices","pageCount","language","textObjects"],"sourceRoot":""}